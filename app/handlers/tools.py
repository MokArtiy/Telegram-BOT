import asyncio
import uuid

from aiogram import F, html
from aiogram.types import Message, CallbackQuery, InputMediaPhoto, FSInputFile
from aiogram.fsm.context import FSMContext
from aiogram.exceptions import TelegramBadRequest

from ..database import requests as rq
from ..database.requests import check_ban_user
from ..keyboards import tools_kb
from ..states.states import WorkGPT, InfAboutFriend
from ..utils import get_media as gm

async def return_to_tools(callback: CallbackQuery, state: FSMContext):
    if (await check_ban_user(callback.from_user.id)):
        await callback.answer('')
        return await callback.message.answer(
            text=f'–í—ã –∑–∞–±–∞–Ω–µ–Ω—ã –≤ –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ, –µ—Å–ª–∏ –≤—ã –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –±–∞–Ω–æ–º, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å '
                 f'[–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º](tg://user?id={5034740706}).',
            parse_mode='markdown')
    
    await state.clear()
    await callback.answer('')
    
    await callback.message.edit_media(
        InputMediaPhoto(
            media=gm.Media_tg.tools_photo,
            caption='–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –±–æ—Ç–∞ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ª—é–±—ã—Ö –∑–∞–¥–∞—á!', 
        ), 
        reply_markup=tools_kb.tools_main_kb
    )

async def tools_main_menu(callback: CallbackQuery):
    if (await check_ban_user(callback.from_user.id)):
        await callback.answer('')
        return await callback.message.answer(
            text=f'–í—ã –∑–∞–±–∞–Ω–µ–Ω—ã –≤ –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ, –µ—Å–ª–∏ –≤—ã –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –±–∞–Ω–æ–º, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å '
                 f'[–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º](tg://user?id={5034740706}).',
            parse_mode='markdown')
        
    await callback.answer('')
    await callback.message.edit_media(
        InputMediaPhoto(
            media=gm.Media_tg.tools_photo,
            caption='–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –±–æ—Ç–∞ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ª—é–±—ã—Ö –∑–∞–¥–∞—á!', 
        ), 
        reply_markup=tools_kb.tools_main_kb
    )
    
#TO-DO
async def return_to_todo(callback: CallbackQuery, state: FSMContext):
    if (await check_ban_user(callback.from_user.id)):
        await callback.answer('')
        return await callback.message.answer(
            text=f'–í—ã –∑–∞–±–∞–Ω–µ–Ω—ã –≤ –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ, –µ—Å–ª–∏ –≤—ã –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –±–∞–Ω–æ–º, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å '
                 f'[–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º](tg://user?id={5034740706}).',
            parse_mode='markdown')
    
    await state.clear()    
    await callback.answer('')
    await callback.message.edit_media(
        InputMediaPhoto(
            media=gm.Media_tg.tools_photo,
            caption='–≠—Ç–æ –º–µ–Ω—é –≤–∞—à–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∑–∞–¥–∞—á.\n–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ ‚¨áÔ∏è', 
        ), 
        reply_markup=tools_kb.todo_main_kb
    ) 

async def todo_main(callback: CallbackQuery):
    if (await check_ban_user(callback.from_user.id)):
        await callback.answer('')
        return await callback.message.answer(
            text=f'–í—ã –∑–∞–±–∞–Ω–µ–Ω—ã –≤ –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ, –µ—Å–ª–∏ –≤—ã –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –±–∞–Ω–æ–º, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å '
                 f'[–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º](tg://user?id={5034740706}).',
            parse_mode='markdown')
    
    await callback.answer('')
    await callback.message.edit_media(
        InputMediaPhoto(
            media=gm.Media_tg.tools_photo,
            caption='–≠—Ç–æ –º–µ–Ω—é –≤–∞—à–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∑–∞–¥–∞—á.\n–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ ‚¨áÔ∏è', 
        ), 
        reply_markup=tools_kb.todo_main_kb
    )
    
async def add_task(callback: CallbackQuery):
    if (await check_ban_user(callback.from_user.id)):
        await callback.answer('')
        return await callback.message.answer(
            text=f'–í—ã –∑–∞–±–∞–Ω–µ–Ω—ã –≤ –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ, –µ—Å–ª–∏ –≤—ã –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –±–∞–Ω–æ–º, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å '
                 f'[–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º](tg://user?id={5034740706}).',
            parse_mode='markdown')
        
    await callback.answer('')
    
    task_id = str(uuid.uuid4())
    user_id = callback.from_user.id
    task = await rq.get_unsave_task(task_id=task_id, user_id=user_id)
    name = task.name if task.name is not None else 'üö´'
    description = task.description if task.description is not None else 'üö´'
    deadline = '‚úîÔ∏è' if task.deadline is not None else 'üö´'
    status = '—Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ' if task.task_check is True else '–Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ'
    
    await callback.message.edit_media(
        InputMediaPhoto(
            media=gm.Media_tg.tools_photo,
            caption=f'–≠—Ç–æ –º–µ–Ω—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á –≤ –≤–∞—à —Å–ø–∏—Å–æ–∫ –¥–µ–ª.\n–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ ‚¨áÔ∏è\n\n'
                    f'*–ù–∞–∑–≤–∞–Ω–∏–µ:* {name}\n'
                    f'*–û–ø–∏—Å–∞–Ω–∏–µ:* {description}\n'
                    f'*–î–µ–¥–ª–∞–π–Ω*: {deadline}\n'
                    f'*–°—Ç–∞—Ç—É—Å*: {status}\n',
            parse_mode='markdown'
        ),
        reply_markup=tools_kb.todo_add_task_kb
    )